@model CartViewModel
@{
    ViewData["Title"] = "Cart";
}

<h1 class="mb-4">Cart</h1>

@if (Model.ItemList.Count == 0)
{
    <div class="alert alert-info" role="alert">
        Your cart is empty. Start adding items to your cart!
    </div>
}
else
{
    <div class="list-group">
        @foreach (var item in Model.ItemList)
        {
            <div class="list-group-item d-flex justify-content-between align-items-center">
                <div>
                    <h5>@item.DishName</h5>
                    <div class="d-flex align-items-center">
                        <span class="me-3">Quantity: @item.Quantity</span>
                        <a class="btn btn-outline-secondary btn-sm me-2"
                           asp-action="UpdateQuantity"
                           asp-route-dishId="@item.Id"
                           asp-route-isIncrease="false"
                           asp-route-returnUrl="@ViewContext.HttpContext.Request.Path">
                            -
                        </a>
                        <a class="btn btn-outline-secondary btn-sm"
                           asp-action="UpdateQuantity"
                           asp-route-dishId="@item.Id"
                           asp-route-isIncrease="true"
                           asp-route-returnUrl="@ViewContext.HttpContext.Request.Path">
                            +
                        </a>
                    </div>
                </div>
                <div>
                    <span class="fw-bold">Price: @Html.DisplayFor(modelItem => item.Price)</span><br />
                </div>
            </div>
        }
    </div>

    <div class="mt-4 d-flex justify-content-between">
        <a class="btn btn-danger" asp-action="ClearCart">Clear Cart</a>
        <span class="fw-bold fs-5">Total: @Model.ItemList.Sum(item => item.Quantity * item.Price).ToString("C")</span>
    </div>
}
