@model IEnumerable<StorageViewModel>
@{
    ViewData["Title"] = "Storage";
    Layout = "_DashBoardLayout";
}
<h1 class="mb-4 text-center">Storage</h1>

<div class="mb-4">
    <form class="d-flex justify-content-between align-items-center mb-3" method="get">
        <div>
            <a asp-action="Create" class="btn btn-primary me-2">Add New Item</a>
            <a asp-controller="StorageLog" asp-action="Index" class="btn btn-info">Storage Log</a>
            @if (Model != null && Model.Any() && Model.First().HasSearched)
            {
                <a asp-controller="Storage" asp-action="Index" class="btn btn-secondary ms-2">Back to List</a>
            }
        </div>
        <div class="d-flex">
            <input class="form-control me-2" name="keyword" type="search" placeholder="Search by name...">
            <button class="btn btn-outline-success" type="submit" formaction="@Url.Action("Search")">Search</button>
        </div>
    </form>

    @if (!Model.Any())
    {
        <a asp-controller="Storage" asp-action="Index" class="btn btn-secondary">Back to List</a>
        <div class="no-dishes-message text-center mt-5">
            <h2>No items available in storage.</h2>
        </div>
    }
    else
    {
        <div class="accordion mb-4" id="storageAccordion">
            @foreach (var category in Model.GroupBy(storage => storage.CategoryName))
            {
                <div class="accordion-item">
                    <div id="collapse-@category.Key" aria-labelledby="heading-@category.Key" data-bs-parent="#storageAccordion">
                        <div class="accordion-body">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>@Html.DisplayNameFor(model => model.ItemId)</th>
                                        <th>@Html.DisplayNameFor(model => model.ItemName)</th>
                                        <th>@Html.DisplayNameFor(model => model.Unit)</th>
                                        <th>@Html.DisplayNameFor(model => model.Quantity)</th>
                                        <th class="text-end">Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in category)
                                    {
                                        <tr>
                                            <td>@Html.DisplayFor(modelItem => item.ItemId)</td>
                                            <td>@Html.DisplayFor(modelItem => item.ItemName)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Unit)</td>
                                            <td>@Html.DisplayFor(modelItem => item.Quantity)</td>
                                            <td class="d-flex justify-content-end">
                                                <div class="btn-group" role="group">
                                                    <a asp-action="Details" asp-route-id="@item.ItemId" class="btn btn-sm btn-info">Details</a>
                                                    <a asp-action="Edit" asp-route-id="@item.ItemId" class="btn btn-sm btn-primary">Edit</a>
                                                    <a asp-action="Delete" asp-route-id="@item.ItemId" class="btn btn-sm btn-danger">Delete</a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>
