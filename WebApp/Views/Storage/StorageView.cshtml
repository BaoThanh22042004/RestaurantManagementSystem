@model IEnumerable<StorageViewModel>
@{
	ViewData["Title"] = "Storage";
	Layout = "_DashBoardLayout";
}
<h1 class="mb-4 text-center">Storage</h1>

<div>
	<div class="d-grid row-gap-2 d-sm-flex justify-content-between rounded border shadow-sm p-3 mb-2">
		<div class="d-inline-block">
			<button onclick="create()" class="btn btn-primary">
				Add New Item
			</button>

			<a asp-controller="StorageLog" asp-action="Index" class="btn btn-info">All Logs</a>
		</div>

		<form class="d-sm-flex justify-content-between align-items-center" method="get">
			@if (Context.Request.Query.ContainsKey("keyword"))
			{
				<a asp-controller="Storage" asp-action="Index" class="btn btn-secondary me-2">Reset</a>
			}
			<div class="d-flex">
				<input class="form-control me-2" name="keyword" type="search" placeholder="Search by name..." value="@Context.Request.Query["keyword"]" />
				<button class="btn btn-outline-success" type="submit" formaction="@Url.Action("Search")">Search</button>
			</div>
		</form>

	</div>

	@if (!Model.Any())
	{
		<div class="rounded border shadow-sm p-3">
			<div class="text-center py-4">
				<h2>No items available in storage.</h2>
			</div>
		</div>
	}
	else
	{
		<div class="rounded border shadow-sm p-3">
			<div class="table-responsive">
				<table class="table table-hover align-middle">
					<thead class="table-dark align-middle">
						<tr>
							<th>@Html.DisplayNameFor(model => model.ItemId)</th>
							<th>@Html.DisplayNameFor(model => model.ItemName)</th>
							<th>@Html.DisplayNameFor(model => model.Unit)</th>
							<th>@Html.DisplayNameFor(model => model.Quantity)</th>
							<th class="text-center">Actions</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in Model)
						{
							<tr>
								<td>@Html.DisplayFor(modelItem => item.ItemId)</td>
								<td>@Html.DisplayFor(modelItem => item.ItemName)</td>
								<td>@Html.DisplayFor(modelItem => item.Unit)</td>
								<td>@Html.DisplayFor(modelItem => item.Quantity)</td>
								<td class="text-center">
									<div class="btn-group" role="group">
										<a type="button" asp-controller="Storage" asp-action="Details" asp-route-id="@item.ItemId" class="btn btn-info">
											Details
										</a>
										<button type="button" onclick="edit(@item.ItemId)" class="btn btn-primary">
											Edit
										</button>
										<button type="button" onclick="deleteAction(@item.ItemId)" class="btn btn-danger">
											Delete
										</button>
									</div>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>

	}
</div>

<div class="modal fade" id="modal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
	<div class="modal-dialog modal-dialog-centered modal-lg modal-dialog-scrollable">
		<div class="modal-content" id="modalContent">
		</div>
	</div>
</div>
@section Scripts {
	<script>
		function create() {
			var url = '@Url.Action("Create", "Storage")';
			$.get(url, function (response) {
				$('#modalContent').html(response);
				$('#modal').modal('show');
			});
		}
		function edit(id) {
			var url = '@Url.Action("Edit", "Storage", new { id = "__id__" })'.replace("__id__", id);
			$.get(url, function (response) {
				$('#modalContent').html(response);
				$('#modal').modal('show');
			});
		}
		function deleteAction(id) {
			var url = '@Url.Action("Delete", "Storage", new { id = "__id__" })'.replace("__id__", id);
			$.get(url, function (response) {
				$('#modalContent').html(response);
				$('#modal').modal('show');
			});
		}
	</script>
}
