@functions {
    public string GetBgClass(Models.Entities.Action action)
    {
        switch (action)
        {
            case Models.Entities.Action.Import:
                return "table-success";
            case Models.Entities.Action.Export:
                return "table-danger";
            case Models.Entities.Action.Cancel:
                return "table-secondary";
            default:
                return "";
        }
    }
}

@model IEnumerable<StorageLogViewModel>
@{
    ViewData["Title"] = "Storage Log";
    Layout = "_DashBoardLayout";
}
<h1>Storage Log</h1>

<a asp-action="Create" class="btn btn-primary">Create</a>
<a asp-controller="Storage" asp-action="Index" class="btn btn-secondary">Back to Storage</a>

<table class="table">
    <thead>
        <tr>
            <th>
                Item ID
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ItemName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().Action)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().RemainQuantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ChangeQuantity)
            </th>
            <th></th>
        </tr>
    </thead>
    @if (Model != null && Model.Any())
    {
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="@GetBgClass(item.Action)">
                    <td>
                        @Html.DisplayFor(modelItem => item.ItemId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ItemName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Action)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RemainQuantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ChangeQuantity)
                    </td>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.LogId" class="btn btn-info">Details</a>
                        @if (!item.Action.Equals(Models.Entities.Action.Cancel))
                        {
                            <a asp-action="Cancel" asp-route-id="@item.LogId" class="btn btn-danger">Cancel</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    }
    else
    {
        <tbody>
            <tr>
                <td colspan="7">No Logs Found.</td>
            </tr>
        </tbody>
    }
</table>