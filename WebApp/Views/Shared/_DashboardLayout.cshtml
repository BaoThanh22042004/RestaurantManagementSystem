@functions {
	public string IsActive(string controller)
	{
		var routeData = Context.Request.RouteValues;
		var currentController = routeData["controller"] as string;

		if (currentController == controller)
		{
			return "active";
		}

		return string.Empty;
	}
}

<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />
	<title>@ViewData["Title"] - Dashboard</title>
	<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
	<link rel="stylesheet" href="~/lib/bootstrap-icons/bootstrap-icons.min.css">
	<link rel="stylesheet" href="/css/site.css" />
	@await RenderSectionAsync("Styles", required: false)
</head>
<body>
	<div class="container-fluid">
		<div class="row">
			<!-- Sidebar -->
			<div id="sidebar-backdrop"></div>
			<nav id="sidebar" class="col-md-3 col-lg-2 d-md-block bg-light sidebar collapse min-vh-100">
				<div class="position-sticky pt-3">
					<a asp-controller="Dashboard" asp-action="Index" class="d-flex align-items-center mb-3 mb-md-0 me-md-auto link-dark text-decoration-none">
						<span class="fs-4">Dashboard</span>
					</a>
					<hr>
					<ul class="nav nav-pills flex-column">
						<li class="nav-item">
							<a asp-controller="Dashboard" asp-action="Index" class="nav-link @IsActive("Dashboard")">
								Dashboard
							</a>
						</li>
						@if (User.IsInRole(nameof(Models.Entities.Role.Manager)))
						{
							<li class="nav-item">
								<a asp-controller="Table" asp-action="Index" class="nav-link @IsActive("Table")">
									Tables
								</a>
							</li>
							<li class="nav-item">
								<a asp-controller="DishCategory" asp-action="Index" class="nav-link @IsActive("DishCategory")">
									Dish Categories
								</a>
							</li>
							<li class="nav-item">
								<a asp-controller="Dish" asp-action="Index" class="nav-link @IsActive("Dish")">
									Dishes
								</a>
							</li>
							<li class="nav-item">
								<a asp-controller="Storage" asp-action="Index" class="nav-link @IsActive("Storage")">
									Storage
								</a>
							</li>
							<li class="nav-item">
								<a asp-controller="Shift" asp-action="Index" class="nav-link @IsActive("Shift")">
									Shifts
								</a>
							</li>
							<li class="nav-item">
								<a asp-controller="User" asp-action="Index" class="nav-link @IsActive("User")">
									Users
								</a>
							</li>
							<li class="nav-item">
								<a asp-controller="Information" asp-action="Index" class="nav-link @IsActive("Information")">
									Information
								</a>
							</li>
							<li class="nav-item">
								<a asp-controller="Reservation" asp-action="List" class="nav-link @IsActive("Reservation")">
									Reservations
								</a>
							</li>
							<li class="nav-item">
								<a asp-controller="Order" asp-action="Index" class="nav-link @IsActive("Order")">
									Order
								</a>
							</li>
							<li class="nav-item">
								<a asp-controller="FeedBack" asp-action="Index" class="nav-link @IsActive("FeedBack")">
									FeedBack
								</a>
							</li>
							<li class="nav-item">
								<a asp-controller="Payroll" asp-action="Index" class="nav-link @IsActive("Payroll")">
									Payroll
								</a>
							</li>
							<li class="nav-item">
								<a asp-controller="Payment" asp-action="Index" class="nav-link @IsActive("Payment")">
									Payment
								</a>
							</li>
						}
						@if (User.IsInRole(nameof(Models.Entities.Role.Accountant)))
						{
							<li class="nav-item">
								<a asp-controller="Storage" asp-action="Index" class="nav-link @IsActive("Storage")">
									Storage
								</a>
							</li>
						}
						@if (User.IsInRole(nameof(Models.Entities.Role.Chef)))
						{
							<li class="nav-item">
								<a asp-controller="Storage" asp-action="Index" class="nav-link @IsActive("Storage")">
									Storage
								</a>
							</li>
						}
						@if (User.IsInRole(nameof(Models.Entities.Role.Waitstaff)))
						{
							<li class="nav-item">
								<a asp-controller="Table" asp-action="Index" class="nav-link @IsActive("Table")">
									Tables
								</a>
							</li>
						}
						<li class="nav-item">
							<a asp-controller="Schedule" asp-action="Index" class="nav-link @IsActive("Schedule")">
								Schedules
							</a>
						</li>
						<li class="nav-item">
							<a asp-controller="Attendance" asp-action="Index" class="nav-link @IsActive("Attendance")">
								Attendances
							</a>
						</li>
					</ul>
					<hr>
					<div class="dropup mb-3">
						<a class="d-flex align-items-center text-decoration-none dropdown-toggle" id="dropdownUser" data-bs-toggle="dropdown" aria-expanded="false">
							<strong>@User.Identity.Name</strong>
						</a>
						<ul class="dropdown-menu text-small shadow" aria-labelledby="dropdownUser">
							<li><a class="dropdown-item" asp-controller="Account" asp-action="Profile">Profile</a></li>
							<li><hr class="dropdown-divider"></li>
							<li><a class="dropdown-item" asp-controller="Account" asp-action="Logout">Logout</a></li>
						</ul>
					</div>
				</div>
			</nav>

			<!-- Main content -->
			<main class="col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4 content-wrapper">
				<div class="d-md-none">
					<button class="btn btn-secondary mb-4 ms-4 d-flex" type="button" data-bs-toggle="collapse" data-bs-target="#sidebar" aria-expanded="false" aria-controls="sidebar">
						<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-list" viewBox="0 0 16 16">
							<path fill-rule="evenodd" d="M2.5 12a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5m0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5m0-4a.5.5 0 0 1 .5-.5h10a.5.5 0 0 1 0 1H3a.5.5 0 0 1-.5-.5" />
						</svg>
					</button>
				</div>
				<div class="container-fluid">
					@RenderBody()
				</div>

			</main>
		</div>
	</div>

	<script src="~/lib/jquery/dist/jquery.min.js"></script>
	<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
	<script src="~/js/site.js" asp-append-version="true"></script>
	@await RenderSectionAsync("Scripts", required: false)

	<script>
		document.addEventListener('DOMContentLoaded', function () {
			var sidebar = document.getElementById('sidebar');
			var toggleBtn = document.querySelector('[data-bs-target="#sidebar"]');
			var sidebarBackdrop = document.getElementById('sidebar-backdrop');

			// Show/hide sidebar and backdrop on toggle button click
			toggleBtn.addEventListener('click', function () {
				sidebar.classList.toggle('show');
				sidebarBackdrop.classList.toggle('show');
			});

			// Close sidebar when clicking outside on mobile
			sidebarBackdrop.addEventListener('click', function () {
				sidebar.classList.remove('show');
				sidebarBackdrop.classList.remove('show');
			});
		});
	</script>
</body>
</html>
